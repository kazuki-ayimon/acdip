ENV["MYSQL_PASSWORD"]
MYSQL_PASSWORD
exit
ENV["MYSQL_PASSWORD"]
exit
Time.zone.name
Time.current
I18n.locale
exit
Hirb::View.enabled?
puts Hirb::Helpers::Table.render [[1,2], [2,3]]
exit
User.create!(name:'admin', email:'www@www.www',  password:'password', admin: true)
User.first
exit
users = User.all
Users.all
User.all
User.destroy_all
User.all
User.destroy_all!
User.first
exit
curl -X GET localhost:3000/api/v1/auth/sign_up
curl -X GET localhost:3000/api/v1/articles
exit
Article.categories
Article.categories.1
Article.categories.gas
Article.categories
Article.categories.maps
Article.categories.class
Article._where_categories(:tshnami)
Article.where_categories(:tshnami)
Article.where_category()
where_category(:tsunami)
Article.where_category(:tsunami)
Article.where_category(:tsunami, :volcano)
exit
Article.title
Article.category
Article.titles
Article.article_favorites
Article.categories
article = Article.create!(title: 'wow', content: 'wow', user_id: 1, category: 32)
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: tsunami)
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: 32)
exit
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: 32)
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: tsunami)
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: :tsunami)
Article.categories
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: :tsunami, :emergency)
Article.create!(title: 'wow', content: 'wow', user_id: 1, category: [:tsunami, :jalert])
exit
Article.category.maps
Article.categories.maps
exit
Infomation.last.article_id
Infomation.last
Infomation.first
Infomation.first.id
exit
Article.create(title: 'wow', content: 'wow', category: 'gas')
Article.create!(title: 'wow', content: 'wow', category: 'gas', user_id: 1)
article = Article.create!(title: 'wow', content: 'wow', category: 'gas', user_id: 1)
article = Article.create!(title: 'wow', content: 'wow', category: 'gas', user_id:\
1)
exit
article = Article.create!(title: 'wow', content: 'wow', category: 'gas', user_id:\
1)
user = User.find(1)
User.first
user = User.first
exit
RequiredPoint.all
PointRecord.all
exit
User.point_ranking
user = User.first
User.first
user = User.first
Article.create!(user_id: 1, title: 'wow', content: 'wow')
Article.create!(user_id: 1, title: 'wow', content: 'wow', category: 'gas')
Point_record.first
PointRecord.first
User.ranking
User.point_ranking
exist
exit
User.point_ranking
exit
article = Article.last
Article.last
Article.first
article = Article.first
Article.first.likers
exit
Article.last.likers_count
likers_count(Article.last)
Article.last.likes.count
Article.last.likers.count
Article.last.likers
Article.first.likers.count
likers_count(Article.first)
Article.first.likers_count
Article.likers_count(Article.first)
exit
Article.likers_count(Article.first)
exit
Article.first.likers_count
exit
likers_count(Article.first)
Article.likers_count(Article.first)
Article.first.likers_count
Article.first.likers_count(Article.first)
Article.first.likers.count
exit
Prefecture.count
City.count
Prefecture.all.each { |pref| puts pref.name }
Prefecture.find_by(name: '東京都').cities.each { |city| puts city.name }
exit
User.first
exit
Article.last.image_url.large
Article.last.thumbnail_url
Article.last
Article.last.thumbnail
exit
User.last
User.first
User.first.image
User.first.image
User.first
exit
Genre.create!(id: 1, name: '電気・ガス', image: File.open("#{Rails.root}/public/images/genre/noimage.jpeg"))
Genre.destroy_all
exit
Genre.create!(id: 1, name: '電気・ガス', image: File.open("#{Rails.root}/public/images/genre/noimage.jpeg"))
Genre.first.image
Genre.first
Genre.first.name
Genre.first.image
exit
Genre.destroy_all
Genre.all
exit
Genre.all
exit
Genre.all
exit
Genre.all
exit
Article.last.id
Article.last.genres
Genre.first.id
Genre.first.articles
exit
Article.ranking
Article.all.ranking
exit
Article.ranking
Article.ranking
Article.all
exit
Article.ranking
Article.ranking.all
Article.all.ranking
exit
exit
Article.ranking
exit
Article.ranking
exit
Article.ranking
exit
Article.ranking
exit
Article.ranking
exit
Article.ranking
exit
Article.ranking
exit
ArticleFavorite.all
exit
Article.likes
exit
Article.likes
Article.last.likes
Article.article_favorites
Article.last.article_favorites
User.last.articles
exit
User.favorited_articles
User.last.favorited_articles
User.last.articles
User.last.articles + favorited_articles
User.last.articles
User.last.favorited_articles
User.last.favorited_articles
exit
User.last.often_user_articles
User.last.often_use_articles
exit
User.last.often_use.articles
User.last.often_use_articles
exit
User.last.often_use_articles
User.first.often_use_articles
exit
User.fist.often_use_articles
User.first.often_use_articles
exit
genre = Genre.last
Article.last.Genre.last
Article.all.genres
Article.last.genres
Article.last.genres.last
exit
User.last.favorited_articles.joins(:articles_genre_relations).where("genre_id = #{Genre.last.id}")
User.last.favorited_articles.joins(:article_genre_relations).where("genre_id = #{Genre.last.id}")
User.first.favorited_articles.joins(:article_genre_relations).where("genre_id = #{Genre.last.id}")
User.first.favorited_articles
User.last.favorited_articles
exit
